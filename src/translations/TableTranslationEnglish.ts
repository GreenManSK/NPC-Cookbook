import { Alignment, Occupation, TableType, UrbanRural } from '../data/TableType';
import { TableTranslationBase } from '../data/TableTranslation';

export class TableTranslationEnglish extends TableTranslationBase {

    private static readonly TRANSLATION_TABLE = new Map<TableType, string[]>([
        [TableType.Gender, ['Unknown', 'Male', 'Female', 'Neutral']],
        [TableType.BodyType, [
            'Emaciated',
            'Boney',
            'Tawny',
            'Wiry',
            'Trim',
            'Toned',
            'Average',
            'Average',
            'Average',
            'Average',
            'Average',
            'Average',
            'Average',
            'Comfortable',
            'Barrel-chested',
            'Paunched',
            'Heavy set',
            'Obese',
            'Morbidly obese',
            'Monstrously obese',
        ]],
        [TableType.HairColor, [
            'white',
            'platinum blonde',
            'golden blonde',
            'copper blonde',
            'faxen',
            'ash brown',
            'light brown',
            'mouse brown',
            'dark brown',
            'black-brown',
            'ravin black',
            'mahogany',
            'auburn brown',
            'cherry brown',
            'copper brown',
            'aubum',
            'burgandy',
            'cherry red',
            'fox red',
            'inger red '
        ]],
        [TableType.Color, [
            'black',
            'storm grey',
            'light grey',
            'chestnut brown',
            'walnut brown',
            'russet brown',
            'burgundy',
            'rose',
            'fuchsia',
            'violet',
            'royal blue',
            'sky blue',
            'teal',
            'pine green',
            'bright green',
            'pale green',
            'lime green',
            'yellow',
            'orange',
            'red'
        ]],
        [TableType.AccentColor, [
            'white',
            'clay green',
            'olive drab',
            'amber',
            'gold',
            'silver',
            'jade',
            'bronze',
            'copper',
            'emerald',
            'vibrant green',
            'tangerine',
            'pepper red',
            'pastel blue',
            'ruby',
            'lavander',
            'saphire',
            'azure',
            'cyan',
            'turquoise'
        ]],
        [TableType.Appearance, [
            'Beady eyed',
            'Big ears',
            'Bulbous nose',
            'Button nose',
            'Disfigured/Infirmity',
            'Exceptionally beautiful',
            'Exceptionally ugly',
            'Goggle eyed',
            'Missing teeth',
            'Piercings on eyebrow',
            'Piercings on lip',
            'Piercings on nose',
            'Sunken eyes',
            'Tattoos on arms',
            'Tattoos on body',
            'Tattoos on face',
            'Thin-lipped',
            'Unusual hair color',
            'Unusual skin color',
            'Weirdly large mouth',
        ]],
        [TableType.HairStyle, [
            'Patchy/wispy',
            'Bald/shaved',
            'Stubble',
            'Very short',
            'Short',
            'Well groomed',
            'Wavy',
            'Curley',
            'Page cut/A-frame',
            'Mohawk',
            'Shoulder-length',
            '-with ornamentation',
            'Wild',
            '-with ornamentation',
            'Long',
            'Braided',
            '-with ornamentation',
            'Very long',
            'Braided',
            '-with ornamentation'
        ]],
        [TableType.FacialHair, [
            'Shadow',
            'Light Stubble',
            'Heavy Stubble',
            'Thin Moustache',
            'Handlebar',
            '-w/ Chin Puff',
            '-w/ Goatee',
            'Moustache',
            'Winnfield',
            'Heavy Moustache',
            'Mutton Chops',
            'Van Dyke',
            'Goatee',
            'Full Beard',
            'Long',
            'Braided or Forked',
            'Very Long',
            '-with ornamentation',
            'Braided or Forked',
            '-with ornamentation'
        ]],
        [TableType.Disfigured, [
            'Blind',
            'Deaf',
            'Deaf and Mute',
            'Horrific cough',
            'Idiot',
            'Lame/limps',
            'Missing arm',
            'Missing eye',
            'Missing finger(s)',
            'Missing foot',
            'Missing hand',
            'Missing leg',
            'Missing lower arm',
            'Mute',
            'No use of legs',
            'Pronounced scar, fire',
            'Pronounced scar, violence',
            'Skin condition',
            'Stooped or crooked posture',
            'Trembling'
        ]],
        [TableType.FashionStyle, [
            'Distinctive bracelet/armband',
            'Distinctive circlet/headband',
            'Distinctive necklace/medallion',
            'Distinctive ring(s)',
            'Exotic/foreign clothes',
            'Flamboyant clothes- flowing drapery',
            'Flamboyant clothes- frills and sashes’',
            'Flamboyant clothes, outlandish',
            'Form fitting and utilitarian',
            'Formal clothes',
            'Hat of strange color',
            'Hat of strange style',
            'Overly conservative (covered)',
            'Patchwork clothes',
            'Patchwork, festive',
            'Patchwork, remnants',
            'Prominent buckles',
            'Prominent straps',
            'Provocative (scantly covered)',
            'Tattered clothes'
        ]],
        [TableType.InteractionTraits, [
            'Argumentative',
            'Arrogant',
            'Blunt',
            'Curious',
            'Enunciates overly clearly',
            'Expository',
            'Formal',
            'Friendly',
            'Honest',
            'Hot tempered',
            'Irritable',
            'Jokes',
            'Lisps',
            'Loud',
            'Ponderous',
            'Rude',
            'Slurs',
            'Stutters',
            'Suspicious',
            'Whispers'
        ]],
        [TableType.Mannerism, [
            'Prone to singing, whistling, or humming',
            'Pulls at lip',
            'Wrings hands',
            'Pulls at ear',
            'Rubs a small object between fingers',
            'Chews on an object',
            'Always smoking',
            'Twirls hair',
            'Bites fingernails',
            'Never relaxed',
            'Always eating',
            'Obsessed with cleanliness',
            'Always writing/sketching in a small book',
            'Always complaining about the temperature',
            'Has to double-check everything',
            'Always drinking something',
            'Always coughing/clearing throat',
            'Sleeps whenever and wherever he/she can',
            'Bites/chews lip',
            'Avoids eye contact'
        ]],
        [TableType.PersonalityTraits, [
            'Adventurous',
            'Aloof',
            'Bashful',
            'Chatty',
            'Compulsive',
            'Courteous',
            'Energetic',
            'Gloomy',
            'Helpful',
            'Kindhearted',
            'Lazy',
            'Lighthearted',
            'Obsequious',
            'Obtuse',
            'Prim',
            'Quiet',
            'Secretive',
            'Selfish',
            'Serious',
            'Thoughtful'
        ]],
        [TableType.Talents, [
            'Animals',
            'Artistic',
            'Carouser',
            'Carpenter',
            'Children',
            'Cook',
            'Darts',
            'Disguise',
            'Games',
            'Interviews/Interrogations',
            'Lucky',
            'Perfect memory',
            'Performer (acting)',
            'Performer (dancer)',
            'Performer (instrument)',
            'Performer (juggler)',
            'Performer (singing)',
            'Puzzles',
            'Speaks several languages',
            'Streetwise/knows thieves’ cant'
        ]],
        [TableType.Alignment, [
            'Lawful Good',
            'Chaotic Good',
            'Neutral Good',
            'Lawful Neutral',
            'Chaotic Neutral',
            'Neutral',
            'Lawful Evil',
            'Neutral Good',
            'Neutral Evil',
            'Lawful Good',
            'Chaotic Good',
            'Neutral Good',
            'Lawful Neutral',
            'Chaotic Neutral',
            'Neutral',
            'Lawful Evil',
            'Chaotic Evil',
            'Neutral Evil',
            'Lawful Neutral',
            'Chaotic Evil'
        ]],
        [TableType.Bonds, [
            'Caretaker',
            'Debt, honor',
            'Debt, life',
            'Debt, monetary',
            'Drawn to a special place',
            'Keepsake, sentimental',
            'Keepsake, valuable',
            'Loyal to patron',
            'Out for revenge',
            'Personal life goal',
            'Protective of colleagues',
            'Protective of family',
            'Protective of place or territory',
            'Quest, enlightenment',
            'Quest, fame',
            'Quest, lost item',
            'Quest, lost person',
            'Restoration, honor',
            'Restoration, place',
            'Romantic interest'
        ]],
        [TableType.Flaws, [
            'Addiction',
            'Arrogance',
            'Decadent pleasure',
            'Disgraced',
            'Easily smitten',
            'Foolhardy bravery',
            'Forbidden love',
            'Heated rivalry',
            'Hunted',
            'Overpowering greed',
            'Physical limitation',
            'Possession of forbidden lore',
            'Powerful enemy',
            'Prejudicial/hatred',
            'Prone to rage',
            'Psychological limitation',
            'Secret crime or misdeed',
            'Social limitation',
            'Trigger/Phobia',
            'Witness to tragedy'
        ]],
        [TableType.Triggers, [
            'Asserting Opinion',
            'Being alone',
            'Children’s security',
            'Darkness',
            'Dead Things',
            'Eating in Front of Others:',
            'Enclosed Spaces',
            'Foreigners',
            'Germs and Filth',
            'Heights',
            'Illness and Disease',
            'Making Small Talk',
            'Meeting New People',
            'Money',
            'Open Spaces',
            'Opposite Sex',
            'Performances',
            'Spiders',
            'Talking to Authority Figures',
            'Thunder or Lightning'
        ]],
        [TableType.UrbanRural, [
            'Urban',
            'Rural'
        ]]
    ]);

    private static IDEAL_TRANSLATION = new Map<Alignment, string[]>([
        [Alignment.General, [
            'Aspiration',
            'Discovery',
            'Glory',
            'Identity',
            'Nation',
            'Redemption'
        ]],
        [Alignment.Good, [
            'Beauty',
            'Charity',
            'Greater good',
            'Life',
            'Respect',
            'Service'
        ]],
        [Alignment.Lawful, [
            'Aspiration',
            'Discovery',
            'Glory',
            'Identity',
            'Nation',
            'Redemption'
        ]],
        [Alignment.Neutral, [
            'Balance',
            'Knowledge',
            'Live-and-let-live',
            'Moderation',
            'Nature',
            'People'
        ]],
        [Alignment.Evil, [
            'Domination',
            'Greed',
            'Might',
            'Pain',
            'Retribution',
            'Slaughter'
        ]],
        [Alignment.Chaotic, [
            'Chance',
            'Change',
            'Creativity',
            'Freedom',
            'Independence',
            'Whimsy'
        ]]
    ]);

    private static readonly OCCUPATION_TRANSLATION = new Map<UrbanRural, string[]>([
        [UrbanRural.Urban, [
            'Lesser Nobility',
            'Religious',
            'Religious',
            'Legal/Judicial',
            'Military',
            'Military',
            'Military',
            'Academic',
            'Merchant/Servicer',
            'Merchant/Servicer',
            'Merchant/Servicer',
            'Merchant/Servicer',
            'Merchant/Servicer',
            'Merchant/Servicer',
            'Merchant/Servicer',
            'Agriculture',
            'Agriculture',
            'Agriculture',
            'Entertainer',
            'Scoundrel/Underclass'
        ]],
        [UrbanRural.Rural, [
            'Lesser Nobility',
            'Religious',
            'Legal/Judicial',
            'Military',
            'Military',
            'Military',
            'Academic',
            'Merchant/Servicer',
            'Merchant/Servicer',
            'Agriculture',
            'Agriculture',
            'Agriculture',
            'Agriculture',
            'Agriculture',
            'Agriculture',
            'Agriculture',
            'Agriculture',
            'Agriculture',
            'Entertainer',
            'Scoundrel/Underclass'
        ]]
    ]);

    private static readonly SPECIFIC_OCCUPATION_TRANSLATION = new Map<Occupation, string[]>([
        [Occupation.LesserNobility, [
            'Adventurer — a minor scion of a noble house who’s chosen to wander the world',
            'Dilettante — a minor scion of a noble house who dabbles in various interests',
            'Diplomat — a representative of his house in dealings with other noble houses',
            'Knight — a well-trained warrior, skilled with sword and lance',
            'Minister — a political figure appointed by a ruler',
            'Nobleman — a member of a well-known, perhaps powerful family',
            'Page — a very young noble beginning his training to be a knight',
            'Squire — a young noble progressing on the path to knighthood'
        ]],
        [Occupation.Religious, [
            'Beadle — subordinate with menial duties',
            'Curate — clergy assistant to the rector',
            'Reeve — time keeper charged with beginning and ending services',
            'Sexton — custodian for church property',
            'Theologian',
            'Acolyte — entry level priest',
            'Ward — a child who is under the care of the church, oftentimes an orphan',
            'Cleric'
        ]],
        [Occupation.LegalJudicial, [
            'Bailiff — presides over arrests and executions',
            'Chamberlain — custodian of a royal or high noble residence',
            'Chancellor — secretary to a king or noble',
            'Constable — head of peace-keeping law enforcement',
            'Diplomat',
            'Exchequer — administrator of royal funds',
            'Jailer',
            'Judge'
        ]],
        [Occupation.Military, [
            'Aid-de-camp — assistant to a superior officer',
            'Archer',
            'Bodyguard',
            'Bounty Hunter',
            'Cavalry',
            'Engineer — designs and builds war machines, such as catapults, and ballistae',
            'Forester — warden often empowered to act as law enforcement within the forest',
            'Gatekeeper or Toll Keeper',
            'Jailer',
            'Mariner',
            'Mercenary',
            'Navigator — special class of mariner',
            'Scout',
            'Soldier',
            'Soldier',
            'Soldier',
            'Soldier',
            'Soldier',
            'Torturer',
            'Watchman'
        ]],
        [Occupation.Academic, [
            'Alchemist — chemist',
            'Architect — a master builder',
            'Ascetic — a hermit or wandering monk',
            'Astrologer',
            'Barber — a doctor, surgeon, bloodletter, dentist, and haircutter',
            'Barrister — a lawyer',
            'Bureaucrat — a local functionary, servant to some more powerful political figure',
            'Cartographer',
            'Engineer — a builder of roads, bridges, castles, fortifications, and siege engines',
            'Herald — an announcer and deliverer of news on behalf of a lord',
            'Historian',
            'Illuminator — paint manuscripts',
            'Librarian',
            'Mathematician',
            'Monk/Nun — an academic devoted to prayer and spirituality',
            'Philosopher',
            'Sage',
            'Scholar',
            'Scrivener — scribe skilled in taking dictation or copying documents',
            'Tutor'
        ]],
        [Occupation.MerchantsAndService1, [
            'Apothecary — seller of herbal remedies',
            'Architect',
            'Armorer',
            'Artist — a painter of portraits',
            'Baker',
            'Banker',
            'Barber',
            'Blacksmith',
            'Boatman — travel by lake or river',
            'Bookbinder',
            'Bowyer — bow craftsman',
            'Brazier — brass worker',
            'Brewer — a maker of beer and ale',
            'Bricklayer — a laborer skilled in the building of walls and ducts',
            'Butcher',
            'Carpenter — an elite tradesman, skilled in math as well as woodworking',
            'Cartographer — Mapmaker',
            'Cartwright — a maker and repairer of carts and wagons',
            'Chandler — candle maker, sometimes soap maker',
            'Chapman — a travelling peddler'
        ]],
        [Occupation.MerchantsAndService2, [
            'Clerk',
            'Clothier — a garment-maker',
            'Coachman — driver ofa coach',
            'Cobbler or Shoemaker — makes and mends shoes',
            'Cook',
            'Cooper — barrel maker',
            'Draper — cloth merchant',
            'Dyer — a maker of inks, paints, dyes, and stains',
            'Engraver',
            'Farmer',
            'Fisherman',
            'Fishmonger',
            'Fortune Teller',
            'Furrier',
            'Gardener',
            'Glassblower',
            'Glazier — glass worker, including windows',
            'Goldsmith or Silversmith',
            'Gravedigger',
            'Grocer'
        ]],
        [Occupation.MerchantsAndService3, [
            'Groom — one who tends animals',
            'Hatter',
            'Herdsman — a keeper of livestock',
            'Hunter',
            'Innkeeper',
            'Jeweler',
            'Joiner — a maker of furniture',
            'Laundress',
            'Leatherworker',
            'Link Boy — carries lamps at night',
            'Locksmith',
            'Maid / Manservant',
            'Mason',
            'Mercer — textile merchant',
            'Messenger',
            'Miller',
            'Miner',
            'Moneylender',
            'Ostler — cares for horses',
            'Painter or Limner'
        ]],
        [Occupation.MerchantsAndService4, [
            'Peddler — an itinerant merchant of goods',
            'Porter — carries baggage',
            'Ratcatcher',
            'Sailor',
            'Scribe',
            'Seamstress',
            'Servant — maid, butler, attendant, steward, etc.',
            'Shipwright — a builder of ships',
            'Spinster-yarn and cord maker',
            'Stevedore — one who loads and unloads goods from sailing ships or caravan',
            'Tailor',
            'Tanner — leather maker',
            'Tavern-keeper',
            'Tax Collector',
            'Thatcher — roof repairs',
            'Tinker — a traveling craftsman who repairs tin pots and other small items',
            'Trader — by land or by sea',
            'Trapper',
            'Vintner —a maker of wines',
            'Weaver'
        ]],
        [Occupation.Agriculture, [
            'Beekeeper',
            'Cartman',
            'Cooper',
            'Farmer, barley',
            'Farmer, beans',
            'Farmer, peas',
            'Farmer, rye',
            'Farmer, special crop',
            'Farmer, wheat',
            'Fisherman',
            'Herdsman',
            'Hunter',
            'Miller',
            'Ostler —cares for horses',
            'Rancher',
            'Reeve',
            'Shepherd',
            'Tanner',
            'Trapper',
            'Woodsman'
        ]],
        [Occupation.Entertainment, [
            'Acrobat',
            'Actor',
            'Beast master',
            'Clown',
            'Dancer',
            'Druggist',
            'Fire-eater',
            'Fortune-teller — might well have real power in a fantasy world',
            'Geek/sideshow freak',
            'Juggler',
            'Minstrel',
            'Orator — composes and recites epic poems',
            'Painter (stage scenery)',
            'Player — minor actor',
            'Prestidigitator — stage magician',
            'Singer',
            'Stilt walker',
            'Storyteller',
            'Strongman',
            'Teamster (labor and support)'
        ]],
        [Occupation.ScoundrelsAndUnderclass, [
            'Assassin — kills for money',
            'Bandit — one ofa gang of thieves who steals by force',
            'Beggar',
            'Burglar — steals by breaking and entering',
            'Con man',
            'Fence — finds buyers for stolen goods, may serve as a pawnbroker',
            'Gambler',
            'Guild operative — vetted member of a crime syndicate',
            'Mugger — lone ruffian who steals by force',
            'Murderer — kills out of compulsion',
            'Pickpocket or Cutpurse — steals by stealth',
            'Procurer — specialists in finding whatever their client might be seeking',
            'Prostitute',
            'Slaver',
            'Smuggler — moves stolen or illegal goods',
            'Street profit — mad cleric spouting portents of doom',
            'Street urchin-child beggar/thief',
            'Thug — muscle for an organized crime syndicate',
            'Usurer (loan shark)',
            'Wanderer — a “barbarian” nomad, drifter, or rover'
        ]]
    ]);

    protected getTranslationTable(): Map<TableType, string[]> {
        return TableTranslationEnglish.TRANSLATION_TABLE;
    }

    protected getIdealTranslation(): Map<Alignment, string[]> {
        return TableTranslationEnglish.IDEAL_TRANSLATION;
    }

    protected getOccupationTranslation(): Map<UrbanRural, string[]> {
        return TableTranslationEnglish.OCCUPATION_TRANSLATION;
    }

    protected getSpecificOccupationTranslation( occupation: Occupation, d20: number, d8: number ): string {
        const table = TableTranslationEnglish.SPECIFIC_OCCUPATION_TRANSLATION.get(occupation);
        if (!table)
            return '';
        return table.length > 8 ? table[d20] : table[d8];
    }

}
